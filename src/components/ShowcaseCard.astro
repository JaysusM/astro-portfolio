---
interface Props {
    title: string;
    entries: { title: string; description: string }[];
    fullScreen?: boolean;
}

const { title, entries, fullScreen } = Astro.props;
---

<aside class={fullScreen ? "showcase-container showcase-full box" : "showcase-container box"}>
  <h3>{title}</h3>
    {
        entries.map((entry) => (
        <div class="showcase-entry">
            <h4>{entry.title}</h4>
            <p>{entry.description}</p>
        </div>
        ))
    }
</aside>
<style>
  .showcase-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    max-width: min(25vw, 400px);
    min-width: min(25vw, 400px);
  }
  .showcase-container.showcase-full {
    max-width: 100%;
    min-width: 100%;
  }
  .showcase-container h3 {
    font-size: 2rem;
    font-weight: 200;
    font-variant: petite-caps;
    text-align: center;
  }
  .showcase-container .showcase-entry {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    border-top: 4px solid var(--border);
    width: 100%;
    max-width: 600px;
    text-align: center; 
  }
  .showcase-container .showcase-entry h4 {
    font-size: 1.25rem;
    margin: 0;
  }
  .showcase-container .showcase-entry p {
    margin: 0;
  }

  @media (width <= 1300px) {
    .showcase-entry p {
        display: none;
    }
  }
</style>
